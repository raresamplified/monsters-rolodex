{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.compnent.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","handleChenge","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OAAQ,sBAAKC,UAAU,iBAAf,UACR,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BACKL,EAAMI,QAAQE,OAEnB,4BACCN,EAAMI,QAAQG,YCNNC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GACJ,qBAAKC,UAAU,YAAf,SAEJD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACtB,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQC,UCPlBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACId,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyCHG,E,kDA1Cb,aAAc,IAAD,8BACX,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAPpC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAY,IAJH,E,qDAYb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,oBAG3C,WACE,MAAgCC,KAAKN,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAGlD,OADAxB,QAAQC,IAAIW,EAAaU,GAEvB,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAa,YAAY,iBACZqB,aAAcL,KAAKf,eACnB,uBAEAC,KAAK,SACLF,YAAa,MACbG,SAAUa,KAAKf,eAEf,cAAC,EAAD,CAAUJ,SAAUoB,W,GArCVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.31f79d53.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    return (<div className='card-container'>\n    <img alt='mansta' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n    <h2>\n        {props.monster.name}\n    </h2>\n    <p>\n    {props.monster.email}\n    </p>\n    </div>)\n}","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = (props) =>{\n    console.log(props); \n    return (<div className='card-list'>\n    {\n        props.monsters.map(monster => \n            <Card key={monster.id } monster={monster}/>)\n    }\n    </div>);\n} ","import'./search-box.styles.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input \n        className='search'\n        type='search' \n        placeholder={placeholder}  \n        onChange={handleChange}\n        />\n);","import './App.css';\nimport {Component} from \"react\";\nimport { CardList } from './components/card-list/card-list.compnent';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:'',\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value});\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters:users}));\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    console.log(searchField, filteredMonsters);\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n        placeholder='cauta manstars' \n        handleChenge={this.handleChange}/>\n        <input \n        //className='search'\n        type='search' \n        placeholder={\"eha\"}  \n        onChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}